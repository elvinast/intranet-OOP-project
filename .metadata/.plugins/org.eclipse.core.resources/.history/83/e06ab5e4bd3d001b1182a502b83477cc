package main;

import java.util.List;
import java.util.Random;
import java.util.Vector;

/**
* @generated
*/
public class TechSupportGuy extends Employee {

	
    private Vector<Order> orders;
    private Order order;
    private OrderStatus orderStatus;


	public TechSupportGuy(String firstName, String lastName, String email, Integer salary) {
		super(firstName, lastName, email, salary);
		orders = new Vector<Order>();
	}

	public OrderStatus getOrderStatus() {
		return orderStatus;
	}
	
	public void setOrderStatus(OrderStatus orderStatus) {
		this.orderStatus = orderStatus;
	}

    public Vector<Order> getOrders() {
        return this.orders;
    }
    public void setOrders(Vector<Order> orders) {
        this.orders = orders;
    }
    
    public Order getOrder() {
        return this.order;
    }
    public void setOrder(Order order) {
        this.order = order;
    }
    

    public boolean acceptOrder(Order order) {
        orders.add(order);
    	return true;
    }
    
    public void updateOrder(OrderStatus status) {
        this.setOrderStatus(status);
    }
    
    public void viewOrders(OrderStatus status) {
        for (Order order: this.orders) {
        	if (order.getOrderStatus().equals(orderStatus)) {
        		System.out.println(order);
        	}
        }
    }

//    public String getTechSupportGuy(){
//        Random rand = new Random();
//        int num = rand.nextInt(10) + 1;
//        switch(num){
//            case 1:
//                return "Yerbol";
//                break;
//            case 2:
//                return "Nurbol";
//                break;
//            case 3:
//                return "Futbol";
//                break;
//            default:
//                return "No Guy available";
//                break;
//        }
//    }

    public void clearOrders(){
        orders.clear();
    }

    public void numberOfOrders(){
        if(orders.size() == 0){
            System.out.println("No orders");
        }
        else {
            System.out.println(orders.size());
        }
    }
     
//    public boolean rejectOrder(Order order) {
//        if(getTechSupportGuy().equals("No guy available"));
//        return true;
//    }

    public String getInfoorders(){
        String str = " ";
        for(int i = 0; i < orders.size(); i++){
            str += orders.get(i).toString() + "\n"; 
        }
        return str;
    }
    
    public String showInfo() {
		String s = "";
		s += "\nFull name: " + this.getFirstName() + " " + this.getLastName() + "\nWork Experience: " + this.getWorkExperience()
		 + "\n0rders: " + this.orders;
		return s;
	}
    
}
